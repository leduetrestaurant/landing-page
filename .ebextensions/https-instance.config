packages:
  yum:
    epel-release: []
    mod24_ssl : []

# ElasticBeanstalk 'env' settings
option_settings:
  aws:elasticbeanstalk:application:environment:
        HTTPS_CERT_DOMAIN: leduet-site.ap-southeast-1.elasticbeanstalk.com
        HTTPS_CONTACT_EMAIL: leduetrestaurant@gmail.com

Resources:
  # Open the 443 port
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

files:
  # The Apache config forces http to https, REPLACE all {{HTTPS_CERT_DOMAIN}} by ONE domain name.
  /etc/httpd/conf.d/http_redirect_template.pre:
    mode: "000644"
    owner: root
    group: root
    content: |
      <VirtualHost *:80>
        ServerName {{HTTPS_CERT_DOMAIN}}
        ServerAlias www.{{HTTPS_CERT_DOMAIN}}
        DocumentRoot "/var/www/html/public"
        RewriteEngine on
        RewriteCond %{SERVER_NAME} ={{HTTPS_CERT_DOMAIN}} [OR]
        RewriteCond %{SERVER_NAME} =www.{{HTTPS_CERT_DOMAIN}}
        RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
      </VirtualHost>

  # The Apache config https, REPLACE all {{HTTPS_CERT_DOMAIN}} by ONE domain name.
  /etc/httpd/conf.d/https_custom_template.pre:
    mode: "000644"
    owner: root
    group: root
    content: |
      # HTTPS server
      <IfModule mod_ssl.c>
      <VirtualHost *:443>
        ServerName {{HTTPS_CERT_DOMAIN}}
        ServerAlias www.{{HTTPS_CERT_DOMAIN}}
        DocumentRoot "/var/www/html/public"
        RewriteEngine on
        SSLCertificateFile /etc/letsencrypt/live/{{HTTPS_CERT_DOMAIN}}/fullchain.pem
        SSLCertificateKeyFile /etc/letsencrypt/live/{{HTTPS_CERT_DOMAIN}}/privkey.pem
        Include /etc/letsencrypt/options-ssl-apache.conf
      </VirtualHost>
      </IfModule>

  /tmp/letsencrypt/options-ssl-apache.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      SSLEngine on
      # Intermediate configuration, tweak to your needs
      SSLProtocol             all -SSLv2 -SSLv3
      SSLCipherSuite          ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
      SSLHonorCipherOrder     on
      SSLOptions +StrictRequire
      # Add vhost name to log entries:
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"" vhost_combined
      LogFormat "%v %h %l %u %t \"%r\" %>s %b" vhost_common
      #CustomLog /var/log/apache2/access.log vhost_combined
      #LogLevel warn
      #ErrorLog /var/log/apache2/error.log
      # Always ensure Cookies have "Secure" set (JAH 2012/1)
      #Header edit Set-Cookie (?i)^(.*)(;\s*secure)??((\s*;)?(.*)) "$1; Secure$3$4"

  # Certbot (HTTPS) install
  "/opt/elasticbeanstalk/hooks/appdeploy/post/100_install_cert_bot.sh":
      mode: "000755"
      owner: root
      group: root
      content: |
        #!/usr/bin/env bash
        echo "Installing CERTBOT.."

        wget https://dl.eff.org/certbot-auto
        mv certbot-auto /usr/local/bin/certbot-auto
        chown root /usr/local/bin/certbot-auto
        chmod 0755 /usr/local/bin/certbot-auto

        echo "CERTBOT installed!"

  # Certbot (HTTPS) config cert
  "/opt/elasticbeanstalk/hooks/appdeploy/post/101_configure_cert.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      domains="`{"Fn::GetOptionSetting": {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "HTTPS_CERT_DOMAIN"}}`"
      https_contact_email="`{"Fn::GetOptionSetting": {"Namespace": "aws:elasticbeanstalk:application:environment", "OptionName": "HTTPS_CONTACT_EMAIL"}}`"

      echo "Configuring CERTBOT for domains: $domains";

      stop httpd || true

      certbot_command="/usr/local/bin/certbot-auto certonly --debug --non-interactive --email $https_contact_email --agree-tos --standalone"

      echo "Removing OLD 000_http* (.config) files"
      rm -Rf /etc/httpd/conf.d/000_http*

      for domain in $(echo $domains | sed "s/,/ /g")
      do
        echo "=== $domain ==="
        echo "**  Setting up CERTBOT for $domain"
        certbot_command_domain="$certbot_command --domains $domain"

        echo "** Running CERTBOT for $domain.."
        eval $certbot_command_domain
        echo "CERTBOT configured!";

        echo "**  Creating HTTPS VirtualHost:443 for $domain.."
        formatted_domain=$(echo $domain | sed "s/\./_/g")
        sed -e "s/{{HTTPS_CERT_DOMAIN}}/$domain/g" /etc/httpd/conf.d/https_custom_template.pre > /etc/httpd/conf.d/000_https_custom_$formatted_domain.conf
        echo "**  Creating redirect HTTP to HTTPS for $domain.."
        sed -e "s/{{HTTPS_CERT_DOMAIN}}/$domain/g" /etc/httpd/conf.d/http_redirect_template.pre > /etc/httpd/conf.d/000_http_redirect_$domain.conf
      done

      echo "Removing .config templates.."
      rm -Rf /etc/httpd/conf.d/https_custom_template.pre
      rm -Rf /etc/httpd/conf.d/http_redirect_template.pre

      mv /tmp/letsencrypt/options-ssl-apache.conf /etc/letsencrypt/options-ssl-apache.conf

      echo "Restarting HTTPD.."
      start httpd
      restart httpd


  # Cron to renew cert
  "/etc/cron.d/certbot_renew":
    mode: "000644"
    owner: root
    group: root
    content: |
      @weekly root /usr/local/bin/certbot-auto renew

  # Redo Jobs if server restarted from EB
  "/opt/elasticbeanstalk/hooks/restartappserver/post/101_redo_certbot.sh":
      mode: "000755"
      owner: root
      group: root
      content: |
        #!/usr/bin/env bash
        echo "Server has been restart from EB"
        /opt/elasticbeanstalk/hooks/appdeploy/post/101_configure_cert.sh
